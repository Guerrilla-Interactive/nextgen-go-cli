{
  "_type": "command",
  "title": "Nextgen Slug Route",
  "slug": {
    "_type": "slug",
    "current": "nextgen-slug-route"
  },
  "filePaths": [
    {
      "_type": "filePathGroup",
      "_key": "1738868072581-yljmao56m",
      "id": "path-1738867914866",
      "path": "app/(main)",
      "nodes": [
        {
          "_type": "treeNode",
          "_key": "1738868072581-10rdjzs2n",
          "id": "folder-1738867916026",
          "name": "{{.LowerCaseRouteName}}",
          "code": "",
          "isIndexer": false,
          "children": [
            {
              "_type": "treeNode",
              "_key": "1738908150397-xkzrrdrgg",
              "id": "folder-1738907615562",
              "name": "[slug]",
              "code": "",
              "isIndexer": false,
              "children": [
                {
                  "_type": "treeNode",
                  "_key": "1739451431158-292lr23ew",
                  "id": "folder-1739449608160",
                  "name": "({{.LowerCaseRouteName}}-slug-core-utilities)",
                  "code": "",
                  "isIndexer": false,
                  "children": [
                    {
                      "_type": "treeNode",
                      "_key": "1738908150397-v72fzmkdv",
                      "id": "file-1738907938593-ix2v1cyrn",
                      "name": "{{.LowerCaseRouteName}}-slug.desk-structure.ts",
                      "code": "import type { StructureBuilder } from \"sanity/structure\";\n\nexport const {{.CamelCaseRouteName}}DeskStructure = (S: StructureBuilder) => {\n  return S.listItem()\n    .title(\"{{.PascalCaseRouteName}}\")\n    .schemaType(\"{{.LowerCaseRouteName}}-slug\")\n    .child(\n      S.documentTypeList(\"{{.LowerCaseRouteName}}-slug\")\n        .title(\"{{.PascalCaseRouteName}}\")\n        .defaultOrdering([{ field: \"_createdAt\", direction: \"desc\" }])\n    );\n};\n",
                      "isIndexer": false,
                      "children": []
                    },
                    {
                      "_type": "treeNode",
                      "_key": "1738908150397-4iudg4xye",
                      "id": "file-1738907938593-u2xq3vq5d",
                      "name": "{{.LowerCaseRouteName}}-slug.route-query.ts",
                      "code": "import { groq } from \"next-sanity\";\n\nexport const GET_{{.UpperCaseRouteName}}_BY_SLUG_QUERY = groq`\n  *[_type == \"{{.LowerCaseRouteName}}-slug\" && defined(slug)] | order(_createdAt desc){\n    title,\n    slug,\n    excerpt,\n  }\n`;\n\nexport const GET_ALL_{{.UpperCaseRouteName}}_SLUGS_QUERY = groq`\n  *[_type == \"{{.LowerCaseRouteName}}-slug\" && defined(slug)]{\n    slug\n  }\n`;\n\nexport const GET_{{.UpperCaseRouteName}}_POST_QUERY = groq`\n  *[_type == \"{{.LowerCaseRouteName}}-slug\" && slug.current == $slug][0]{\n    title,\n    slug,\n    _createdAt,\n    _updatedAt,\n  }\n`;\n",
                      "isIndexer": false,
                      "children": []
                    },
                    {
                      "_type": "treeNode",
                      "_key": "1738908150397-t05gwnest",
                      "id": "file-1738907938593-cxvqda7pq",
                      "name": "{{.LowerCaseRouteName}}-slug.route-schema.ts",
                      "code": "import { defineField, defineType } from \"sanity\";\nimport { FileText } from \"lucide-react\";\n\nexport default defineType({\n  name: \"{{.LowerCaseRouteName}}-slug\",\n  title: \"{{.PascalCaseRouteName}}\",\n  type: \"document\",\n  icon: FileText,\n  groups: [\n    {\n      name: \"content\",\n      title: \"Content\",\n    },\n    {\n      name: \"seo\",\n      title: \"SEO\",\n    },\n    {\n      name: \"settings\",\n      title: \"Settings\",\n    },\n  ],\n  fields: [\n    defineField({\n      name: \"title\",\n      title: \"Title\",\n      type: \"string\",\n      group: \"content\",\n      validation: (Rule) => Rule.required(),\n    }),\n    defineField({\n      name: \"slug\",\n      title: \"Slug\",\n      type: \"slug\",\n      group: \"settings\",\n      options: {\n        source: \"title\",\n        maxLength: 96,\n      },\n      validation: (Rule) => Rule.required(),\n    }),\n    defineField({\n      name: \"excerpt\",\n      title: \"Excerpt\",\n      type: \"text\",\n      group: \"content\",\n    }),\n  ],\n});\n",
                      "isIndexer": false,
                      "children": []
                    },
                    {
                      "_type": "treeNode",
                      "_key": "1739451431158-opfxlwg0y",
                      "id": "file-1739449795743",
                      "name": "{{.LowerCaseRouteName}}-slug.server-actions.ts",
                      "code": "\"use server\";\n\nimport { sanityFetch } from \"@/sanity/lib/live\";\n\nimport { GET_ALL_{{.UpperCaseRouteName}}_SLUGS_QUERY, GET_{{.UpperCaseRouteName}}_BY_SLUG_QUERY } from \"./{{.LowerCaseRouteName}}.route-query\";\n\n// Fetch a full {{.PascalCaseRouteName}} using its slug\nexport async function fetchSanity{{.PascalCaseRouteName}}BySlug({\n  slug,\n}: {\n  slug: string;\n}): Promise<Sanity.{{.PascalCaseRouteName}}> {\n  const { data } = await sanityFetch({\n    query: GET_{{.UpperCaseRouteName}}_BY_SLUG_QUERY,\n    params: { slug },\n  });\n  return data;\n}\n\n// Fetch all {{.PascalCaseRouteName}} slugs for static params generation\nexport async function fetchSanity{{.PascalCaseRouteName}}StaticParams(): Promise<Sanity.{{.PascalCaseRouteName}}[]> {\n  const { data } = await sanityFetch({\n    query: GET_ALL_{{.UpperCaseRouteName}}_SLUGS_QUERY,\n    perspective: \"published\",\n    stega: false,\n  });\n  return data;\n}\n\nexport async function fetchSanity{{.PascalCaseRouteName}}s() {\n  const { data } = await sanityFetch({\n    query: GET_ALL_{{.UpperCaseRouteName}}_SLUGS_QUERY,\n  });\n  return data;\n}\n",
                      "isIndexer": false,
                      "children": []
                    }
                  ]
                },
                {
                  "_type": "treeNode",
                  "_key": "1738908150397-pw8or1cfj",
                  "id": "file-1738907938593-7ca5p1243",
                  "name": "page.tsx",
                  "code": "import { notFound } from \"next/navigation\";\n\nimport { generatePageMetadata } from \"@/features/unorganized-utils/metadata\";\nimport PortableTextRenderer from \"@/features/unorganized-components/portable-text-renderer\";\nimport { fetchSanity{{.PascalCaseRouteName}}BySlug, fetchSanity{{.PascalCaseRouteName}}StaticParams } from \"./({{.LowerCaseRouteName}}-core-utilities)/{{.LowerCaseRouteName}}.server-actions\";\n\nexport async function generateStaticParams() {\n  const posts = await fetchSanity{{.PascalCaseRouteName}}StaticParams();\n\n  return posts.map((post) => ({\n    slug: post.slug.current,\n  }));\n}\n\nexport async function generateMetadata(props: {\n  params: Promise<{ slug: string }>;\n}) {\n  const { slug } = await props.params;\n  const post = await fetchSanity{{.PascalCaseRouteName}}BySlug({ slug });\n\n  if (!post) {\n    notFound();\n  }\n\n  return generatePageMetadata({ page: post, slug: `/${{.LowerCaseRouteName}}/${slug}` });\n}\n\nexport default async function {{.PascalCaseRouteName}}(props: {\n  params: Promise<{ slug: string }>;\n}) {\n  const { slug } = await props.params;\n  const post = await fetchSanity{{.PascalCaseRouteName}}BySlug({ slug });\n\n  if (!post) {\n    notFound();\n  }\n  return (\n    <section>\n      <div className=\"container py-16 xl:py-20\">\n        {post.body && <PortableTextRenderer value={post.body} />}\n      </div>\n    </section>\n  );\n}\n",
                  "isIndexer": false,
                  "children": []
                }
              ]
            }
          ]
        },
        {
          "_type": "treeNode",
          "_key": "1738915780930-sfvdk48k2",
          "id": "file-1738915358780",
          "name": "all-route-document-schemas.ts",
          "code": "// THIS IS AN INDEXER FILE\n\n// START OF VALUE 1\nimport {{.LowerCaseRouteName}}SlugSchema from \"@/app/(main)/{{.LowerCaseRouteName}}/[slug]/({{.LowerCaseRouteName}}-slug-core-utilities)/{{.LowerCaseRouteName}}-slug.route-schema\";\n// END OF VALUE 1\nimport pageSlugSchema from \"@/app/(main)/(root)/[slug]/page-slug.route-schema\";\nimport blogSlugSchema from \"@/app/(main)/blog/[slug]/(blog-slug-core-utilities)/blog-slug.route-schema\";\n// ADD VALUE 1 ABOVE\n\nconst routeDocumentSchemas = {\n\n  // START OF VALUE 2\n  {{.LowerCaseRouteName}}SlugSchema,\n  // END OF VALUE 2\n  pageSlugSchema,\n  blogSlugSchema,\n  // ADD VALUE 2 ABOVE\n};\n\nexport const allRouteDocumentSchemas = Object.values(routeDocumentSchemas);\n\nexport const ROUTE_DOCUMENT_SCHEMA_TYPES = allRouteDocumentSchemas.map((schema) => schema.name);\n",
          "isIndexer": true,
          "children": []
        }
      ]
    }
  ]
}