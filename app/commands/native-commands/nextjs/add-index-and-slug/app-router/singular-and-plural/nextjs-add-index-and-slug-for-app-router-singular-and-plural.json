{
    "_type": "command",
    "title": "PageType for Index + Slug (Singular + Plural)",
    "choiceName": "Singular + Plural",
    "slug": "page-type-index-and-slug-singular-and-plural",
    "show": { "anyOf": [
      { "packageJson": { "name": "never" } },
      { "packageJsonArrayContains": { "nextgen-identifiers": "never" } },
      { "commandPackagesContains": ["never"] }
    ] },
    "filePaths": [
      {
        "_type": "filePathGroup",
        "id": "plural-index-singular-slug-json-grouped-shared",
        "path": "/app",
        "nodes": [
          {
            "_type": "treeNode",
            "type": "folder",
            "name": "({{.KebabCaseSingular}}-route)",
            "children": [
              {
                "_type": "treeNode",
                "type": "file",
                "name": "{{.KebabCaseSingular}}-data.json",
                "code": "[\n  { \"title\": \"Example A\", \"slug\": \"example-a\", \"excerpt\": \"Short description for A.\" },\n  { \"title\": \"Example B\", \"slug\": \"example-b\", \"excerpt\": \"Short description for B.\" },\n  { \"title\": \"Example C\", \"slug\": \"example-c\", \"excerpt\": \"Short description for C.\" }\n]\n"
              },
              {
                "_type": "treeNode",
                "type": "folder",
                "name": "{{.KebabCasePlural}}",
                "children": [
                  {
                    "_type": "treeNode",
                    "type": "file",
                    "name": "page.tsx",
                    "code": "// seed: {{.Singular}} {{.Plural}}\nimport Link from \"next/link\";\nimport Image from \"next/image\";\nimport items from \"../{{.KebabCaseSingular}}-data.json\";\n\nexport const metadata = {\n  title: \"{{.PascalCasePlural}}\",\n  description: \"Index page for {{.KebabCasePlural}}\"\n};\n\nexport default function {{.PascalCasePlural}}IndexPage() {\n  return (\n    <div className=\"font-sans grid grid-rows-[20px_1fr] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20\">\n      <main className=\"flex flex-col gap-[32px] row-start-2 items-center sm:items-start w-full max-w-3xl\">\n        <Image className=\"dark:invert\" src=\"/next.svg\" alt=\"Next.js logo\" width={180} height={38} priority />\n        <div className=\"w-full\">\n          <h1 className=\"text-2xl font-bold tracking-tight\">{{.PascalCasePlural}}</h1>\n          <p className=\"text-sm/6 opacity-70 mt-1\">Data from <code className=\"bg-black/[.05] dark:bg-white/[.06] px-1 py-0.5 rounded\">/{{.KebabCaseSingular}}-data.json</code></p>\n        </div>\n        <ul className=\"w-full grid gap-4\">\n          {items.map((item) => (\n            <li key={item.slug} className=\"rounded-2xl border border-black/[.08] dark:border-white/[.145] p-4 sm:p-5 transition-colors hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a]\">\n              <div className=\"flex items-center justify-between gap-3\">\n                <div>\n                  <h2 className=\"font-medium tracking-[-.01em]\">\n                    <Link href={`/{{.KebabCaseSingular}}/${item.slug}`}>{item.title}</Link>\n                  </h2>\n                  {item.excerpt ? <p className=\"text-sm/6 opacity-80 mt-1\">{item.excerpt}</p> : null}\n                </div>\n                <Link className=\"rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent text-sm h-10 px-4 whitespace-nowrap\" href={`/{{.KebabCaseSingular}}/${item.slug}`}>View →</Link>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </main>\n    </div>\n  );\n}\n"
                  }
                ]
              },
              {
                "_type": "treeNode",
                "type": "folder",
                "name": "{{.KebabCaseSingular}}",
                "children": [
                  {
                    "_type": "treeNode",
                    "type": "file",
                    "name": "page.tsx",
                    "code": "// seed: {{.Singular}} {{.Plural}}\nimport { redirect } from \"next/navigation\";\n\nexport default function {{.PascalCaseSingular}}RedirectPage() {\n  redirect(\"/{{.KebabCasePlural}}\");\n}\n"
                  },
                  {
                    "_type": "treeNode",
                    "type": "folder",
                    "name": "[slug]",
                    "children": [
                      {
                        "_type": "treeNode",
                        "type": "file",
                        "name": "page.tsx",
                        "code": "import Image from \"next/image\";\nimport Link from \"next/link\";\nimport { notFound } from \"next/navigation\";\nimport items from \"../../{{.KebabCaseSingular}}-data.json\";\n\nexport type PageProps = { params: Promise<{ slug: string }> };\n\nexport async function generateMetadata({ params }: PageProps) {\n  const { slug } = await params;\n  const entry = items.find((i) => i.slug === slug);\n  const title = entry ? `${entry.title} | {{.PascalCasePlural}}` : `${slug} | {{.PascalCasePlural}}`;\n  return { title };\n}\n\nexport async function generateStaticParams() {\n  return items.map((i) => ({ slug: i.slug }));\n}\n\nexport default async function {{.PascalCaseSingular}}SlugPage({ params }: PageProps) {\n  const { slug } = await params;\n  const entry = items.find((i) => i.slug === slug);\n  if (!entry) return notFound();\n\n  return (\n    <div className=\"font-sans grid grid-rows-[20px_1fr] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20\">\n      <main className=\"flex flex-col gap-[32px] row-start-2 items-center sm:items-start w-full max-w-3xl\">\n        <Image className=\"dark:invert\" src=\"/next.svg\" alt=\"Next.js logo\" width={180} height={38} priority />\n        <div className=\"w-full\">\n          <Link href=\"/{{.KebabCasePlural}}\" className=\"text-sm hover:underline hover:underline-offset-4\">← Back to {{.LowerCasePlural}}</Link>\n          <h1 className=\"text-2xl font-bold tracking-tight mt-2\">{entry.title}</h1>\n          {entry.excerpt ? <p className=\"text-sm/6 opacity-80 mt-1\">{entry.excerpt}</p> : null}\n        </div>\n        <pre className=\"w-full rounded-2xl border border-black/[.08] dark:border-white/[.145] p-4 overflow-auto text-xs opacity-80\">{JSON.stringify(entry, null, 2)}</pre>\n      </main>\n    </div>\n  );\n}\n"
                      },
                      {
                        "_type": "treeNode",
                        "type": "file",
                        "name": "not-found.tsx",
                        "code": "import Image from \"next/image\";\nimport Link from \"next/link\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"font-sans grid grid-rows-[20px_1fr] items-center justify-items-center min-h-screen p-8 pb-20 gap-16 sm:p-20\">\n      <main className=\"flex flex-col gap-[32px] row-start-2 items-center sm:items-start w-full max-w-3xl\">\n        <Image className=\"dark:invert\" src=\"/next.svg\" alt=\"Next.js logo\" width={180} height={38} priority />\n        <h1 className=\"text-2xl font-bold tracking-tight\">Not found</h1>\n        <p className=\"text-sm/6 opacity-80\">The page you’re looking for doesn’t exist.</p>\n        <Link href=\"/{{.KebabCasePlural}}\" className=\"rounded-full border border-solid border-black/[.08] dark:border-white/[.145] transition-colors flex items-center justify-center hover:bg-[#f2f2f2] dark:hover:bg-[#1a1a1a] hover:border-transparent text-sm h-10 px-4\">Back to {{.LowerCasePlural}}</Link>\n      </main>\n    </div>\n  );\n}\n"
                      }
                    ]
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  }
  